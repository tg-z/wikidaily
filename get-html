#!/bin/bash

set -e
set -o nounset
set -o errexit
set -o pipefail
IFS=$'\n\t'

_ME="${0##*/}"
_jq="$(command -v jq)"
_curl="$(command -v curl)"
_tree="$(command -v tree)"
timestamp="$(date -I)"
export indexfile="wikidaily.html"
dest="${2:-_site}"

if [ ! -d "${dest}" ]; then
	mkdir -p "${dest}"
fi

_info() {
    # $1: info message
    printf "%b\n" "\033[32mINFO\033[0m ${1}" >&2
}

help(){
    cat<<__EOF__
usage: ${_ME} <options>

options:
     -h, --help      print usage
     -i, --index     regenerate index.html file
     -l, --list      list daily wikifiles
     -p, --push      push changes to git remote if exists
     -u, --update    update daily wikifile
__EOF__
}

list() {
    "${_tree}" -C "${dest}"
}

index() {

./index

_info "index file updated ✓"
}

download() {

"${_curl}" "https://en.wikipedia.org/w/api.php?format=json&action=query&generator=random&grnnamespace=0&prop=pageimages|extracts&exintro&grnlimit=6" | "${_jq}" -r '.query.pages | [ map(.) | .[] | {title: .title, pageid: .pageid, extract: .extract, thumbnail: .thumbnail.source} ] | .[] | "<img src=" + .thumbnail + "><br><a href=https://en.wikipedia.org/?curid="+(.pageid|tostring)+">"+ .title+"</a><br>"+ .extract+"<br><br>"' > "${dest}"/"${timestamp}".html

}

update() {
  download
  git add "${dest}"
  _info "successfully updated ✓"
}

push() {
  index
  gr="$(git rev-parse --show-toplevel)"
  cd "${gr}" || exit
  if git status | grep -c 'Your branch is ahead' > /dev/null; then
	  git push
  else
	  read -r -p "commit message: " desc
	  git commit -am "${desc}"
	  git push
	  _info "changes pushed ✓"
  fi
}

case "$*" in
    --help|-h)
        help
        ;;
    --index|-i)
	index
	;;
    --list|-l)
        list
        ;;
    --push|-p)
        shift
        push
	;;
    --update|-u)
        shift
        update
        ;;
    *) help
        ;;

esac
